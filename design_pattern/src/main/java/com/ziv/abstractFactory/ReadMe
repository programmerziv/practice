抽象工厂是在工厂之上再抽象出一个工厂，也就是说，抽象工厂是创建工厂的工厂，它和工厂模式很类似
只是在此基础上加了个抽象类让你选择哪个工厂，因此每次添加工厂时会很麻烦，抽象类要修改，具体的工厂类要添加，
工厂下的选择也要添加，挺麻烦的
相比于工厂模式，我们在操作时候，只是先通过工厂类创建工厂，然后再通过工厂创建具体的产品类了

抽象工厂模式整体思路是这样的：
1.就像上面说的一样，抽象工厂是先创建一个工厂的工厂，其实就是先创建一个抽象的工厂类，这个类要定义多个静态方法，最后的返回是具体的某个实现类
2.定义几个真正的工厂，实现抽象工厂类，根据自己工厂的特性，选择性的实现抽象类对应的方法（很显然，此工厂类就是普通的工厂类，里面对应的一个方法
就是用来决定最后由哪个bean实现的）
3.然后定义一个类，这个类类似于简单工厂里的工厂，然后里面也是有一个判断方法，这个方法是静态的，要不不好调用抽象工厂的方法。
4.真正的应用的时候，是直接获取3中的类，然后通过静态方法获取到对应的具体工厂（但返回类型还是抽象工厂）
5.对应的工厂在调用某个方法，根据参数返回具体的bean，然后这个bean就是需要的bean
6.总结：就是需要传两次参数才行，一个确定是用什么工厂（但返回的类型是抽象工厂），一个是确定是用具体哪个bean的（但返回的是那个bean实现的接口）