简单工厂模式是属于设计模式中创建模式的一个，它将创建的细节隐藏，从而只暴露接口和创建结果。
但是一个很明显的问题，你每增加一个具体的接口实现类，都要在工厂中增加相应的判断，不是很符合开闭原则。
有人说可以用反射来代替啊，但是反射需要知道类名的，工厂模式创建的优点就是你并非一定需要知道是类名，
你可能就是一个字符串就可以创建工厂了。再者说反射，你都知道类名了，直接反射就能得到了

简单工厂模式整体思路是这样的：
1.先有一个接口，定义了要实现的方法
2.然后有几个实现类去具体实现对应的接口方法
3.创建工厂，工厂内有个传参的方法，返回的是1中的接口，根据具体的参数，去判断，最后决定调用2中的一个新的对象
4.用的时候，首先获取工厂（可以new也可以通过注入之后get获取），然后调用工厂里的传参方法，得到的是1接口（其实是1接口对应参数的实现类），
然后是接口调用其内部方法，就是调用2中实现类的内部方法
5.相当于我只是根据一个参数就得到对应的bean，但有个前提是工厂里的bean都实现了同一个接口
（也不一定，工厂是一个方法只会返回一个接口，但是多个方法就可以返回多个接口，但这样的话工厂就不纯粹了）